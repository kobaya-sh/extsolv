WITH_DEBUG_MODE=0

PROLOGUE () {
  cat  <<EOF
!
!   This program is generated by $0.
!   The change of this file will be ignored.
!
subroutine prmtop_r(prmfile_name,         &
  ITITL,                                  &
  NATOM,  NTYPES, NBONH,  MBONA,  NTHETH, &
  MTHETA, NPHIH,  MPHIA,  NHPARM, NPARM,  &
  NNB,    NRES,   NBONA,  NTHETA, NPHIA,  &
  NUMBND, NUMANG, NPTRA,  NATYP,  NPHB,   &
  IFPERT, NBPER,  NGPER,  NDPER,  MBPER,  &
  MGPER,  MDPER,  IFBOX,  NMXRS,  IFCAP,  &
  NUMEXTRA, NCOPY,                        &
  IGRAPH,                                 &
  CHARGE,                                 &
  AMASS,                                  &
  IAC,                                    &
  NUMEX,                                  &
  ICO,                                    &
  LBRES, IPRES,                           &
  IJICBH, IJICB, IJKICTH, IJKICT,         &
  IJKLICPH, IJKLICP,                      &
  INB,                                    &
  ISYMBL,                                 &
  ITREE,                                  &
  TYPE,                                   &
  RK, REQ, TK, TEQ, PK,  PN,  PHASE,      &
  ONE_SCEE, ONE_SCNB, SOLTY,              &
  CN1,CN2,                                &
  ASOL, BSOL,                             &
  RBORN,                                  &
  FS                                      &
)
implicit none
!include 'mmcounter.inc'
include 'size.inc'
include 'prmtop.inc'

! files
integer,parameter       :: fh_prmtop = 7
character*60,intent(in) :: prmfile_name

integer       :: eof
character*120 :: line
!integer       :: i,j,k,l,ixyz
logical       :: idbg 
character*8   :: fmt
!real*8        :: tmp

idbg = .false.
idbg = .true.
eof = 0
!
!    0. Defaults
!
ONE_SCEE=1.0d0/1.2d0
ONE_SCNB=1.0d0/2.0d0
!
!    1. Read prmtops
!
open(fh_prmtop,file=trim(prmfile_name))
do 
  read(fh_prmtop,'(a80)',iostat=eof) line
  if (eof/=0) then
    exit
! vim: filetype=sh
EOF
}

CHECK_ELEMENTS () {
  KW=$1; VAR=$2; SIZ=$3;
  if [ "x$SIZ" != "x" ]; then
    RANGE="(1:$SIZ)"
  else
    RANGE=""
  fi
  cat <<EOF
  elseif(line(1:len_trim(line))=='%FLAG $KW') then
    read(fh_prmtop,*) line
    fmt = line(8:len_trim(line))
    read(fh_prmtop,fmt) $VAR$RANGE
EOF
  if [ $WITH_DEBUG_MODE = 1 ]; then
    cat <<EOF
    if(idbg)then
      write(*,'(a)') '%FLAG $KW'
      write(*,'(a)') '%FORMAT'//fmt
      write(*,fmt) $VAR$RANGE
    endif
EOF
  fi
}

GET_POINTERS () {
  POINTERS=" &
        NATOM,    NTYPES, NBONH,  MBONA,  NTHETH, MTHETA, NPHIH,  MPHIA,  NHPARM, NPARM, &
        NNB,      NRES,   NBONA,  NTHETA, NPHIA,  NUMBND, NUMANG, NPTRA,  NATYP,  NPHB,  &
        IFPERT,   NBPER,  NGPER,  NDPER,  MBPER,  MGPER,  MDPER,  IFBOX,  NMXRS,  IFCAP, &
        NUMEXTRA, NCOPY"
  cat <<EOF
  elseif(line(1:len_trim(line))=='%FLAG POINTERS') then
    read(fh_prmtop,'(a80)') line
    fmt = line(8:len_trim(line))
    read(fh_prmtop,fmt) $POINTERS
EOF
  if [ $WITH_DEBUG_MODE = 1 ]; then
    cat <<EOF
    if(idbg)then
      write(*,'(a)') '%FLAG POINTERS'
      write(*,'(a)') '%FORMAT'//fmt
      write(*,fmt) $POINTERS
    endif
EOF
  fi
}

EPILOGUE () {
  cat << EOF
  endif
enddo
close(fh_prmtop)

return
endsubroutine
EOF
}

PROLOGUE
CHECK_ELEMENTS TITLE ITITL 20 
GET_POINTERS
CHECK_ELEMENTS ATOM_NAME IGRAPH NATOM
CHECK_ELEMENTS CHARGE CHARGE NATOM
CHECK_ELEMENTS MASS AMASS NATOM
CHECK_ELEMENTS ATOM_TYPE_INDEX IAC NATOM
CHECK_ELEMENTS NUMBER_EXCLUDED_ATOMS NUMEX NATOM
CHECK_ELEMENTS NONBONDED_PARM_INDEX ICO 'NTYPES**2'
CHECK_ELEMENTS RESIDUE_LABEL LBRES NRES
CHECK_ELEMENTS RESIDUE_POINTER IPRES NRES
CHECK_ELEMENTS BOND_FORCE_CONSTANT RK NUMBND
CHECK_ELEMENTS BOND_EQUIL_VALUE REQ NUMBND
CHECK_ELEMENTS ANGLE_FORCE_CONSTANT TK NUMANG
CHECK_ELEMENTS ANGLE_EQUIL_VALUE TEQ NUMANG
CHECK_ELEMENTS DIHEDRAL_FORCE_CONSTANT PK NPTRA
CHECK_ELEMENTS DIHEDRAL_PERIODICITY PN NPTRA
CHECK_ELEMENTS DIHEDRAL_PHASE PHASE NPTRA
CHECK_ELEMENTS SCEE_SCALE_FACTOR ONE_SCEE NPTRA
CHECK_ELEMENTS SCNB_SCALE_FACTOR ONE_SCNB NPTRA
CHECK_ELEMENTS SOLTY SOLTY NATYP
CHECK_ELEMENTS LENNARD_JONES_ACOEF CN1 'NTYPES*(NTYPES+1)/2'
CHECK_ELEMENTS LENNARD_JONES_BCOEF CN2 'NTYPES*(NTYPES+1)/2'
CHECK_ELEMENTS BONDS_INC_HYDROGEN IJICBH '3*NBONH'
CHECK_ELEMENTS BONDS_WITHOUT_HYDROGEN IJICB '3*NBONA'
CHECK_ELEMENTS ANGLES_INC_HYDROGEN IJKICTH '4*NTHETH'
CHECK_ELEMENTS ANGLES_WITHOUT_HYDROGEN IJKICT '4*NTHETA'
CHECK_ELEMENTS DIHEDRALS_INC_HYDROGEN IJKLICPH '5*NPHIH'
CHECK_ELEMENTS DIHEDRALS_WITHOUT_HYDROGEN IJKLICP '5*NPHIA'
CHECK_ELEMENTS EXCLUDED_ATOMS_LIST INB NNB
CHECK_ELEMENTS HBOND_ACOEF ASOL NPHB
CHECK_ELEMENTS HBOND_BCOEF BSOL NPHB
CHECK_ELEMENTS AMBER_ATOM_TYPE ISYMBL NATOM
CHECK_ELEMENTS TREE_CHAIN_CLASSIFICATION ITREE NATOM
CHECK_ELEMENTS RADII RBORN NATOM
CHECK_ELEMENTS SCREEN FS NATOM
EPILOGUE
